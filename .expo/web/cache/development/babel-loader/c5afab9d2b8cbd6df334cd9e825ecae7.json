{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/mayana/projets/wild/projet/baam_mobile/Components/GalleryTab.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport * as FileSystem from 'expo-file-system';\nimport AppContainer from \"./AppContainer\";\nvar APIURL = \"https://api.cloudinary.com/v1_1/dy8inpbdc/image/upload\";\n\nvar uploadToCloudinary = function uploadToCloudinary(filename) {\n  var fileinfo, fileString, base64String, formdata;\n  return _regeneratorRuntime.async(function uploadToCloudinary$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(FileSystem.getInfoAsync(filename));\n\n        case 2:\n          fileinfo = _context2.sent;\n          console.log(fileinfo);\n          _context2.prev = 4;\n          _context2.next = 7;\n          return _regeneratorRuntime.awrap(FileSystem.readAsStringAsync(fileinfo.uri, {\n            encoding: FileSystem.EncodingType.Base64\n          }));\n\n        case 7:\n          fileString = _context2.sent;\n          base64String = \"data:image/jpeg;base64,\" + fileString;\n          formdata = new FormData();\n          formdata.append(\"file\", base64String);\n          formdata.append(\"upload_preset\", \"wcspreset\");\n          console.log(\"uploading started\");\n          fetch(APIURL, {\n            body: formdata,\n            method: \"POST\"\n          }).then(function _callee(r) {\n            var data;\n            return _regeneratorRuntime.async(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return _regeneratorRuntime.awrap(r.json());\n\n                  case 2:\n                    data = _context.sent;\n                    console.log(data);\n\n                  case 4:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          }).catch(function (err) {\n            return console.log(err);\n          });\n          _context2.next = 19;\n          break;\n\n        case 16:\n          _context2.prev = 16;\n          _context2.t0 = _context2[\"catch\"](4);\n          console.log(_context2.t0);\n\n        case 19:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[4, 16]], Promise);\n};\n\nvar GalleryTabComponent = function GalleryTabComponent() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      photos = _useState2[0],\n      setPhotos = _useState2[1];\n\n  (function _callee2() {\n    return _regeneratorRuntime.async(function _callee2$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.t0 = setPhotos;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(FileSystem.readDirectoryAsync(FileSystem.cacheDirectory + \"ImageManipulator\"));\n\n          case 3:\n            _context3.t1 = _context3.sent;\n            return _context3.abrupt(\"return\", (0, _context3.t0)(_context3.t1));\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  })();\n\n  return React.createElement(AppContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Gallery component\"), React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, photos.map(function (photo) {\n    return React.createElement(React.Fragment, null, React.createElement(Image, {\n      key: photo,\n      style: {\n        resizeMode: \"contain\",\n        height: 400,\n        marginBottom: 10\n      },\n      source: {\n        uri: FileSystem.cacheDirectory + \"ImageManipulator/\" + photo\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }), React.createElement(Button, {\n      title: \"Upload\",\n      onPress: function onPress() {\n        return uploadToCloudinary(FileSystem.cacheDirectory + \"ImageManipulator/\" + photo);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }));\n  })));\n};\n\nexport default GalleryTabComponent;","map":{"version":3,"sources":["/home/mayana/projets/wild/projet/baam_mobile/Components/GalleryTab.js"],"names":["React","useState","FileSystem","AppContainer","APIURL","uploadToCloudinary","filename","getInfoAsync","fileinfo","console","log","readAsStringAsync","uri","encoding","EncodingType","Base64","fileString","base64String","formdata","FormData","append","fetch","body","method","then","r","json","data","catch","err","GalleryTabComponent","photos","setPhotos","readDirectoryAsync","cacheDirectory","map","photo","resizeMode","height","marginBottom"],"mappings":"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","sourcesContent":["\nimport React, { useState } from \"react\";\nimport { StyleSheet, Text, ScrollView, Image, Button } from \"react-native\";\nimport * as FileSystem from 'expo-file-system';\n\nimport AppContainer from \"./AppContainer\";\n\nconst APIURL = \"https://api.cloudinary.com/v1_1/dy8inpbdc/image/upload\";\n\nconst uploadToCloudinary = async (filename) => {\n  const fileinfo = await FileSystem.getInfoAsync(filename);\n  console.log(fileinfo);\n  try {\n    let fileString = await FileSystem.readAsStringAsync(fileinfo.uri, {\n      encoding: FileSystem.EncodingType.Base64,\n    });\n    let base64String = \"data:image/jpeg;base64,\" + fileString;\n    let formdata = new FormData();\n    formdata.append(\"file\", base64String);\n    formdata.append(\"upload_preset\", \"wcspreset\");\n    console.log(\"uploading started\");\n    fetch(APIURL, {\n      body: formdata,\n      method: \"POST\",\n    })\n      .then(async (r) => {\n        let data = await r.json();\n        console.log(data);\n      })\n      .catch((err) => console.log(err));\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n\nconst GalleryTabComponent = () => {\n  const [photos, setPhotos] = useState([]);\n\n  (async () => \n    setPhotos(\n      await FileSystem.readDirectoryAsync (\n        FileSystem.cacheDirectory + \"ImageManipulator\"\n      )\n    )\n  )();\n\nreturn (\n    <AppContainer>\n      <Text>Gallery component</Text>\n      <ScrollView>\n      {photos.map(photo => (\n          <>\n            <Image\n              key={photo}\n              style={{ resizeMode: \"contain\", height: 400, marginBottom: 10 }}\n              source={{\n                uri: FileSystem.cacheDirectory + \"ImageManipulator/\" + photo,\n              }}\n            />\n            <Button\n              title=\"Upload\"\n              onPress={() =>\n                uploadToCloudinary(\n                  FileSystem.cacheDirectory + \"ImageManipulator/\" + photo\n                )\n              }\n            />\n          </>\n        )) }\n      </ScrollView>\n    </AppContainer>\n  );\n};\n\nexport default GalleryTabComponent;"]},"metadata":{},"sourceType":"module"}